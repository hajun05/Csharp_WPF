<Window x:Class="MyFirstWPFApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:c="clr-namespace:MyFirstWPFApp.Converters"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyFirstWPFApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--Window Resource에 Convertor 등록-->
    <Window.Resources>
        <c:BoolToGender x:Key="BoolToGender" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListView
            Grid.Row="0"
            ItemsSource="{Binding People}"
            SelectedItem="{Binding SelectedPerson, Mode=TwoWay}">
            <ListView.View>
                <!--GridView는 데이터를 가로와 세로로, 즉 테이블 형태로 표현하고자 할 때 사용-->
                <GridView>
                    <GridView.Columns>
                        <!--DisplayMemberBinding 속성은 어떤 특정 바인딩된 ViewModel의 속성을 아무 꾸밈없이 바로 설정할때 사용-->
                        <GridViewColumn DisplayMemberBinding="{Binding Id}" Header="Id" />
                        <!--Header 속성으로 설정하여 각 컬럼의 타이틀을 설정-->
                        <GridViewColumn Header="Name">
                            <GridViewColumn.CellTemplate>
                                <!--DataTemplate은 기존 포멧에서 벗어나, 사용자 입맛에 맞게 표현될 수 있도록 커스터마이징을 할 수 있는 속성-->
                                <DataTemplate>
                                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Gender">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <!--ComboBox에 입력할 데이터 템플릿 정의-->
                                    <!--Binding Path ViewModel의 어떤 속성의 출처를 정확히 명시할 때 사용-->
                                    <ComboBox
                                        Width="60"
                                        ItemsSource="{Binding Path=DataContext.GenderTypes, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                        SelectedValue="{Binding Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource BoolToGender}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <TextBlock Margin="5" Text="{Binding SelectedPerson.Id}" />
            <TextBlock Margin="5" Text="{Binding SelectedPerson.Name}" />
            <TextBlock Margin="5" Text="{Binding SelectedPerson.Gender, Converter={StaticResource BoolToGender}}" />
        </StackPanel>
    </Grid>
</Window>
